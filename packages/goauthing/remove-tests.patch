diff --git a/go.mod b/go.mod
index 3a39cbe..d55c07a 100644
--- a/go.mod
+++ b/go.mod
@@ -5,7 +5,6 @@ go 1.12
 require (
 	github.com/howeyc/gopass v0.0.0-20190910152052-7cb4b85ec19c
 	github.com/juju/loggo v0.0.0-20210728185423-eebad3a902c4
-	github.com/smartystreets/goconvey v1.6.4
 	golang.org/x/crypto v0.0.0-20210817164053-32db794688a5 // indirect
 	golang.org/x/sys v0.0.0-20210823070655-63515b42dcdf // indirect
 	golang.org/x/term v0.0.0-20210615171337-6886f2dfbf5b // indirect
diff --git a/go.sum b/go.sum
index d51a534..c71ebca 100644
--- a/go.sum
+++ b/go.sum
@@ -2,8 +2,6 @@ github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1 h1:EGx4pi6eqNxGa
 github.com/gopherjs/gopherjs v0.0.0-20181017120253-0766667cb4d1/go.mod h1:wJfORRmW1u3UXTncJ5qlYoELFm8eSnnEO6hX4iZ3EWY=
 github.com/howeyc/gopass v0.0.0-20190910152052-7cb4b85ec19c h1:aY2hhxLhjEAbfXOx2nRJxCXezC6CO2V/yN+OCr1srtk=
 github.com/howeyc/gopass v0.0.0-20190910152052-7cb4b85ec19c/go.mod h1:lADxMC39cJJqL93Duh1xhAs4I2Zs8mKS89XWXFGp9cs=
-github.com/jtolds/gls v4.20.0+incompatible h1:xdiiI2gbIgH/gLH7ADydsJ1uDOEzR8yvV7C0MuV77Wo=
-github.com/jtolds/gls v4.20.0+incompatible/go.mod h1:QJZ7F/aHp+rZTRtaJ1ow/lLfFfVYBRgL+9YlvaHOwJU=
 github.com/juju/ansiterm v0.0.0-20180109212912-720a0952cc2a/go.mod h1:UJSiEoRfvx3hP73CvoARgeLjaIOjybY9vj8PUPPFGeU=
 github.com/juju/loggo v0.0.0-20210728185423-eebad3a902c4 h1:NO5tuyw++EGLnz56Q8KMyDZRwJwWO8jQnj285J3FOmY=
 github.com/juju/loggo v0.0.0-20210728185423-eebad3a902c4/go.mod h1:NIXFioti1SmKAlKNuUwbMenNdef59IF52+ZzuOmHYkg=
@@ -12,8 +10,6 @@ github.com/mattn/go-colorable v0.0.6/go.mod h1:9vuHe8Xs5qXnSaW/c/ABM9alt+Vo+STaO
 github.com/mattn/go-isatty v0.0.0-20160806122752-66b8e73f3f5c/go.mod h1:M+lRXTBqGeGNdLjl/ufCoiOlB5xdOkqRJdNxMWT7Zi4=
 github.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d h1:zE9ykElWQ6/NYmHa3jpm/yHnI4xSofP+UP6SpjHcSeM=
 github.com/smartystreets/assertions v0.0.0-20180927180507-b2de0cb4f26d/go.mod h1:OnSkiWE9lh6wB0YB77sQom3nweQdgAjqCqsofrRNTgc=
-github.com/smartystreets/goconvey v1.6.4 h1:fv0U8FUIMPNf1L9lnHLvLhgicrIVChEkdzIKYqbNC9s=
-github.com/smartystreets/goconvey v1.6.4/go.mod h1:syvi0/a8iFYH4r/RixwvyeAJjdLS9QV7WQ/tjFTllLA=
 golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=
 golang.org/x/crypto v0.0.0-20210817164053-32db794688a5 h1:HWj/xjIHfjYU5nVXpTM0s39J9CbLn7Cc5a7IC5rwsMQ=
 golang.org/x/crypto v0.0.0-20210817164053-32db794688a5/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=
diff --git a/libauth/coding_test.go b/libauth/coding_test.go
deleted file mode 100644
index 26b5dcf..0000000
--- a/libauth/coding_test.go
+++ /dev/null
@@ -1,31 +0,0 @@
-package libauth
-
-import (
-	"testing"
-
-	. "github.com/smartystreets/goconvey/convey"
-)
-
-func TestQuirkBase64Encode(t *testing.T) {
-	Convey("QuirkBase64Encode should work", t, func() {
-		So(QuirkBase64Encode("1"), ShouldEqual, "9+==")
-		So(QuirkBase64Encode("2"), ShouldEqual, "9S==")
-		So(QuirkBase64Encode("34"), ShouldEqual, "9z+=")
-		So(QuirkBase64Encode("567"), ShouldEqual, "0FZ7")
-		So(QuirkBase64Encode("\x00"), ShouldEqual, "LL==")
-		So(QuirkBase64Encode("\x00\x00"), ShouldEqual, "LLL=")
-		So(QuirkBase64Encode("\xff\x00\x00"), ShouldEqual, "AvLL")
-		So(QuirkBase64Encode("\x01"), ShouldEqual, "L+==")
-		So(QuirkBase64Encode("\x01==!@#$%^&*()"), ShouldEqual, "LFt52HLkRourRX//8+==")
-		So(QuirkBase64Encode("\x01aAbB_+=-\x11"), ShouldEqual, "LaiVZYRs8ztfP+==")
-	})
-}
-func TestXEncode(t *testing.T) {
-	Convey("XEncode should work", t, func() {
-		So(QuirkBase64Encode(*XEncode("", "aa0edd0fff7dd9f1f0ae4e981ec0114c7b0bf6f67c4895bed4f4ac634e97ecf2")), ShouldEqual, "")
-		So(QuirkBase64Encode(*XEncode("1", "aa0edd0fff7dd9f1f0ae4e981ec0114c7b0bf6f67c4895bed4f4ac634e97ecf2")), ShouldEqual, "NmsaR0fCm5H=")
-		So(QuirkBase64Encode(*XEncode("agfawegwq12834eqrge", "aa0edd0fff7dd9f1f0ae4e981ec0114c7b0bf6f67c4895bed4f4ac634e97ecf2")), ShouldEqual, "DAxHygvRUjlDyJjmvChIzuavMsjy7B9L")
-		So(QuirkBase64Encode(*XEncode("agfawegwq12834eqrge", "0000000000000000000000000000000000000000000000000000000000000000")), ShouldEqual, "TOdQ9ggF2y/mskS6Orkg+eUZIok9vqJr")
-		So(QuirkBase64Encode(*XEncode("9$02%8r89)(&22{}we[f]|s", "aa0edd0fff7dd9f1f0ae4e981ec0114c7b0bf6f67c4895bed4f4ac634e97ecf2")), ShouldEqual, "kCG+xmvGAhCV717Y80Fk0o1YJ8SYvBdnUmQoqS==")
-	})
-}
diff --git a/libauth/requests_test.go b/libauth/requests_test.go
deleted file mode 100644
index 311fc3b..0000000
--- a/libauth/requests_test.go
+++ /dev/null
@@ -1,35 +0,0 @@
-package libauth
-
-import (
-	"testing"
-
-	. "github.com/smartystreets/goconvey/convey"
-)
-
-func TestExtractJSONFromJSONP(t *testing.T) {
-
-	Convey("Extracting JSON from JSONP...", t, func() {
-		json, err := extractJSONFromJSONP("cb()", "cb")
-		So(err, ShouldBeNil)
-		So(json, ShouldEqual, "")
-		json, err = extractJSONFromJSONP("C({})", "C")
-		So(err, ShouldBeNil)
-		So(json, ShouldEqual, "{}")
-		json, err = extractJSONFromJSONP(`jQuery({"key1": 1234})`, "jQuery")
-		So(err, ShouldBeNil)
-		So(json, ShouldEqual, `{"key1": 1234}`)
-		json, err = extractJSONFromJSONP("C({})", "")
-		So(err, ShouldNotBeNil)
-		json, err = extractJSONFromJSONP("C({})", "Q")
-		So(err, ShouldNotBeNil)
-		json, err = extractJSONFromJSONP("C({}", "C")
-		So(err, ShouldNotBeNil)
-		json, err = extractJSONFromJSONP("", "C")
-		So(err, ShouldNotBeNil)
-	})
-}
-
-// func TestBuildLoginParams(t *testing.T) {
-// 	loggo.ConfigureLoggers("libauth=DEBUG")
-// 	buildLoginParams("hello", "pass", "32f23b9c2229fd034f6d5160d8b4536496af550efc45113635689d2d8f12ffad")
-// }
